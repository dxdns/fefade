:root {
	--border-width: 1px;
}

.card {
	padding: 1rem;
	overflow: hidden;
	position: relative;
	border-radius: 0.5rem;
	transition: all 300ms ease;
	text-align: left;
	border: var(--border-width) solid var(--ff-border);
}

.card.contained {
	color: var(--ff-on-surface);
	background: color-mix(in srgb, var(--ff-surface) 50%, transparent);
}

.card.outlined {
	color: inherit;
	background: none;
}

.card.isTranslucent {
	background: color-mix(in srgb, var(--ff-surface) 30%, transparent);
	backdrop-filter: blur(3px);
	-webkit-backdrop-filter: blur(3px);
	border: 1px solid var(--ff-border);
}

.card.animatedBorder {
	--primary: var(--ff-on-surface);
	--secondary: var(--ff-border);
	--width: var(--border-width);
	border: var(--width) solid transparent;
	overflow: unset;
}

.card.animatedBorder::before {
	content: " ";
	position: absolute;
	inset: calc(var(--width) * -1);
	z-index: -1;
	border: inherit;
	border-radius: inherit;
	background-image: conic-gradient(
		from var(--angle),
		var(--secondary) 80%,
		var(--primary) 88%,
		var(--primary) 92%,
		var(--secondary) 100%
	);
	background-origin: border-box;
	-webkit-mask:
		linear-gradient(black, black) content-box,
		linear-gradient(black, black);
	mask:
		linear-gradient(black, black) content-box,
		linear-gradient(black, black);
	-webkit-mask-clip: content-box, border-box;
	mask-clip: content-box, border-box;
	-webkit-mask-composite: xor;
	mask-composite: exclude;
	animation: spin-fallback 3s linear infinite;
}

@supports (background: conic-gradient(from 0deg, red, blue)) and
	(color: color(display-p3 1 0 0)) {
	@property --angle {
		syntax: "<angle>";
		inherits: true;
		initial-value: 0turn;
	}

	.card.animatedBorder::before {
		animation: spin-modern 3s linear infinite;
	}

	@keyframes spin-modern {
		to {
			--angle: 1turn;
		}
	}
}

@keyframes spin-fallback {
	0% {
		background-image: conic-gradient(
			from 0deg,
			var(--secondary) 80%,
			var(--primary) 88%,
			var(--primary) 92%,
			var(--secondary) 100%
		);
	}

	25% {
		background-image: conic-gradient(
			from 90deg,
			var(--secondary) 80%,
			var(--primary) 88%,
			var(--primary) 92%,
			var(--secondary) 100%
		);
	}

	50% {
		background-image: conic-gradient(
			from 180deg,
			var(--secondary) 80%,
			var(--primary) 88%,
			var(--primary) 92%,
			var(--secondary) 100%
		);
	}

	75% {
		background-image: conic-gradient(
			from 270deg,
			var(--secondary) 80%,
			var(--primary) 88%,
			var(--primary) 92%,
			var(--secondary) 100%
		);
	}

	100% {
		background-image: conic-gradient(
			from 360deg,
			var(--secondary) 80%,
			var(--primary) 88%,
			var(--primary) 92%,
			var(--secondary) 100%
		);
	}
}

@supports not (background: conic-gradient(red, blue)) {
	.card.animatedBorder::before {
		background: linear-gradient(
			45deg,
			var(--secondary),
			var(--primary),
			var(--secondary)
		);
		animation: rotate-fallback 3s linear infinite;
	}

	@keyframes rotate-fallback {
		from {
			transform: rotate(0deg);
		}

		to {
			transform: rotate(360deg);
		}
	}
}

@supports not (mask-composite: exclude) {
	.card.animatedBorder::before {
		-webkit-mask-composite: xor;

		mask-composite: subtract;
	}
}

@media (hover: hover) and (pointer: fine) {
	.card.animatedBorder.stopOnHover:hover::before {
		animation-play-state: paused;
	}
}
